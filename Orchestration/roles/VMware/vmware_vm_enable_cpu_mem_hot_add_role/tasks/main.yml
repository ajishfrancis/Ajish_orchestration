---

- include_tasks: "{{start_mail}}"
  when: hostvars[inventory_hostname]['inventory_hostname'] ==  vmname and hotcpu_required == 'yes'

- block:

  - name: Powering off VM if Running
    vmware_guest:
      hostname: "{{vcenter_hostname}}"
      username: "{{vcenter_username}}"
      validate_certs: false
      password: "{{vcenter_password}}"
      state: "{{vmstate_off}}"
      datacenter: "{{datacenter}}"
      name: "{{vmname}}"
    delegate_to: localhost
    when: hostvars[inventory_hostname]['inventory_hostname'] ==  vmname and hotcpu_required == 'yes'
      
  - name: Configuration of the hardware Memory and CPU
    vmware_guest:
      hostname: "{{vcenter_hostname}}"
      username: "{{vcenter_username}}"
      validate_certs: false
      password: "{{vcenter_password}}"
      state: "{{vmstate}}"
      datacenter: "{{datacenter}}"
      name: "{{vmname}}"
      hardware:
       memory_mb: "{{memory_mb}}"
       num_cpus: "{{num_cpus}}"
       hotadd_cpu: "{{hotadd_cpu}}"
       hotadd_memory: "{{hotadd_memory}}"
    delegate_to: localhost
    when: hostvars[inventory_hostname]['inventory_hostname'] ==  vmname and hotcpu_required == 'yes'
    register: result


  - name: Powering on the VM
    vmware_guest:
      hostname: "{{vcenter_hostname}}"
      username: "{{vcenter_username}}"
      validate_certs: false
      password: "{{vcenter_password}}"
      state: "{{vmstate_on}}"
      datacenter: "{{datacenter}}"
      name: "{{vmname}}" 
    delegate_to: localhost
    when: hostvars[inventory_hostname]['inventory_hostname'] ==  vmname and hotcpu_required == 'yes'

  - name: Sending the success mail
    include_tasks: "{{success_mail}}"
    when: hostvars[inventory_hostname]['inventory_hostname'] ==  vmname and hotcpu_required == 'yes' and result is success

  rescue:
   - debug: 
       msg: "The failed task was :  {{ ansible_failed_task.name }} for the role called   {{ role_name }}  of hostname  {{ hostvars[inventory_hostname]['inventory_hostname'] }}"
     register: output

   - name: setting the facts
     set_fact:
        failmsg: "{{ output }}"

   - name: Task failed
     include_tasks: "{{failure_mail}}"
